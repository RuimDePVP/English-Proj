{"ast":null,"code":"var _jsxFileName = \"/home/kaso/english-proj/src/pages/Game/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport './index.css';\nconst countable = ['Apple', 'Orange', 'Carrot', 'Cake', 'Hospital', 'School', 'Temple', 'Church', 'Pen', 'Pencil', 'Braser', 'Bag', 'Lamp', 'Brush', 'Bottle', 'Car', 'Trophy', 'House', 'Chair', 'Table'];\nconst uncountable = ['Milk', 'Water', 'Coffe', 'Water', 'Oil', 'Juice', 'Air', 'Childhood', 'Sand', 'Salt', 'Rice', 'Wheat', 'Barley', 'Rain', 'Snow', 'Time', 'Soil', 'Love', 'Patience', 'Oat'];\nconst nouns = countable.concat(uncountable);\nexport default function Game({\n  history\n}) {\n  const [word, setWord] = useState(nouns[Math.round(Math.rand() * (nouns.length - 1))]);\n  let [count, setCount] = useState(20);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCount(count - 1);\n      console.log(count);\n\n      if (count <= 0) {\n        history.push('/retry');\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  });\n\n  function handleClick(value) {\n    if (!(countable.includes(word) && value) && !(uncountable.includes(word) && !value)) {\n      console.log('Errado!');\n      history.push('/retry');\n    } else {\n      console.log('Correto');\n      const rand = Math.round(Math.random() * (nouns.length - 1));\n      setWord(nouns[rand]);\n      setCount(20);\n    }\n\n    console.log(value);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"SASKE\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mission\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Essa palavra \\xE9 \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 47\n    }\n  }, \"countable\"), \" ou \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 77\n    }\n  }, \"uncountable\"), \" ?\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"word\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, word), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 32\n    }\n  }, count), \" segundos restantes!\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"game-btn\",\n    id: \"left\",\n    value: true,\n    onClick: () => handleClick(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"COUNTABLE\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"game-btn\",\n    id: \"right\",\n    value: false,\n    onClick: () => handleClick(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"UNCOUNTABLE\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"back\",\n    onClick: () => {\n      history.push('/');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"VOLTAR\"));\n}","map":{"version":3,"sources":["/home/kaso/english-proj/src/pages/Game/index.js"],"names":["React","useEffect","useState","countable","uncountable","nouns","concat","Game","history","word","setWord","Math","round","rand","length","count","setCount","timer","setInterval","console","log","push","clearInterval","handleClick","value","includes","random"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport './index.css';\n\nconst countable = ['Apple', 'Orange', 'Carrot', 'Cake', 'Hospital', 'School', 'Temple', 'Church', 'Pen', 'Pencil', 'Braser', 'Bag', 'Lamp', 'Brush', 'Bottle', 'Car', 'Trophy', 'House', 'Chair', 'Table'];\nconst uncountable = ['Milk', 'Water', 'Coffe', 'Water', 'Oil', 'Juice', 'Air', 'Childhood', 'Sand', 'Salt', 'Rice', 'Wheat', 'Barley', 'Rain', 'Snow', 'Time', 'Soil', 'Love', 'Patience', 'Oat'];\nconst nouns = countable.concat(uncountable);\n\nexport default function Game({ history }) {\n  const [word, setWord] = useState(nouns[Math.round(Math.rand() * (nouns.length - 1))]);\n  let [count, setCount] = useState(20);\n\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCount(count - 1);\n      console.log(count);\n\n      if (count <= 0) {\n        history.push('/retry');\n      }\n    }, 1000);\n\n    return () => clearInterval(timer);\n\n  });\n\n  function handleClick(value) {\n    if (!(countable.includes(word) && value) && !(uncountable.includes(word) && !value)) {\n      console.log('Errado!')\n      history.push('/retry');\n    } else {\n      console.log('Correto')\n      const rand = Math.round(Math.random() * (nouns.length - 1));\n      setWord(nouns[rand]);\n      setCount(20);\n    }\n    console.log(value);\n  }\n\n  return (\n    <>\n      <h1 className=\"title\" >SASKE</h1>\n      <div className=\"game-window\">\n        <p className=\"mission\">Essa palavra Ã© <strong>countable</strong> ou <strong>uncountable</strong> ?</p>\n        <p className=\"word\">{word}</p>\n        <p className=\"counter\"><strong>{count}</strong> segundos restantes!</p>\n        <button className=\"game-btn\" id=\"left\" value={true} onClick={() => handleClick(true)}>COUNTABLE</button>\n        <button className=\"game-btn\" id=\"right\" value={false} onClick={() => handleClick(false)}>UNCOUNTABLE</button>\n      </div>\n      <button className=\"back\" onClick={() => { history.push('/') }}>VOLTAR</button>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}